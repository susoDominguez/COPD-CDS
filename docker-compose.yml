version: '3.8'
services:
  busybox:
    image: busybox
    container_name: fuseki-data
    networks: 
      - cig_interaction
    volumes: 
      - "drug_volume:/fuseki"
  store_app:
    build: 
      context: ./TMRWebX/fuseki/
      dockerfile: Dockerfile
    image: road2h_store_ms
    container_name: store_service
    restart: unless-stopped
    env_file: .env
    ports: 
      - "${CIG_STORE_PORT}:3030"
    networks: 
      - cig_interaction
    environment:
      - ADMIN_PASSWORD=${CIG_STORE_PWD}
      - TDB=2
      - FUSEKI_DATASET_1=careActions
      - FUSEKI_DATASET_2=transitions
      - FUSEKI_DATASET_3=beliefs
      - FUSEKI_DATASET_4=CIG-COPD
      - JVM_ARGS=-Xmx2g
    depends_on: 
      - busybox
  interaction_app:
    build: 
      context: ./TMRWebX/api/
      dockerfile: Dockerfile
    image: road2h-interaction_ms
    container_name: interaction_service
    restart: unless-stopped
    env_file: .env
    ports:
      - "${CIG_INTERACTION_PORT}:8888"
    networks: 
      - cig_interaction
    environment:
      - JENA_PORT=${CIG_STORE_PORT}
      #Interaction container port
      - PORT=${CIG_INTERACTION_PORT}
      #password to access Store container Jena database
      - FUSEKI_PASSWORD=${CIG_STORE_PWD}
    depends_on:
      - reasoner_app
  reasoner_app:
    build: 
      context: ./TMRWebX/backend/
      dockerfile: Dockerfile
    image: road2h-reasoner_ms
    container_name: reasoner_service
    restart: unless-stopped
    env_file: .env
    stdin_open: true
    tty: true       
    ports: 
      - "1234:1234"
    networks: 
      - cig_interaction
    environment:
      - FUSEKI_HOST_PORT=http://store_service:${CIG_STORE_PORT}/
    depends_on: 
      - store_app
  db:
    image: mongo:4.4.17
    restart: unless-stopped
    env_file: .env
    ports:
      - "${MONGODB_PORT}:27017"
    container_name: mongodb
    volumes:
      - ~/mongodata:/data/db
    networks:
      - dmims
      - mongodb_network
  proxy:
    build:
      context: ./cds_hooks_manager/
      dockerfile: Dockerfile
    image: cds_hooks_mgmt_ms
    container_name: hooks_manager_service
    env_file: .env
    restart: unless-stopped
    ports:
      - "${CDS_HM_PORT}:3000"
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_LOGS=${CDS_HM_LOGS}
      - CDS_SERVICES_MS_HOST=services_manager_service
      - CDS_SERVICES_MS_PORT=${CDS_SM_PORT}
      - SNOMEDCT_BASE_URL=${SNOMEDCT_FHIR_SRVR_URL}
      - PROXY_PORT=${CDS_HM_PORT}
    links:
      - db
    depends_on:
      - db
    networks:
      - dmims
  cig_exec_engine:
    build:
      context: ./cds-services-manager/
      dockerfile: Dockerfile
    image: cds_services_mgmt_ms
    container_name: services_manager_service
    env_file: .env
    restart: unless-stopped
    ports:
      - "${CDS_SM_PORT}:3010"
    environment:
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_LOGS=${CDS_SM_LOGS}
      - PORT=${CDS_SM_PORT}
      - TMR_PORT=${CIG_INTERACTION_PORT}
      - ARGUMENTATION_ENGINE_URL=${MITIGATION_SERVICE_URL}
    depends_on: 
      - db
    networks:
      - dmims
      - cig_interaction
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
    - ME_CONFIG_MONGODB_SERVER=mongodb
    - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
   # - ME_CONFIG_MONGODB_ADMINUSERNAME=root
   # - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_EXPRESS_ADMIN_PWD}
   # - ME_CONFIG_BASICAUTH_USERNAME=admin
   # - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_BASIC_PWD}
    #volumes:
    #  - ~/mongodata
    depends_on:
      - db
    networks:
    - mongodb_network
    ports:
    - 8081:8081
volumes:
  drug_volume:
    name: drug_volume
  mongodata:
    name: mongodata
networks:
  dmims:
    name: dmims
  cig_interaction:
    name: cig_interaction
  mongodb_network:
    name: mongodb_network